extends ../layout/common.pug

block productPage
    //- button.ml-auto.mb-2(type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" style="float : right;") Filter
    //- .modal.fade(id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true")
    //-     .modal-dialog
    //-         .modal-content
    //-             .modal-header 
    //-                 h5(class="modal-title" id="exampleModalLabel") Filter member
    //-             .modal-body
    //-                 form(action="/product/filter" method="GET" id="filterProduct")
    //-                 -if(brand) {
    //-                     .mb-2 
    //-                         label(for="exampleFormControlSelect1") Brand
    //-                         select(class="form-select" name="brandId" value=brandId ? brand.name : '')
    //-                             option(values=-1)
    //-                             -   brand.forEach(each => {
    //-                                     option(value=each.id)= each.name
    //-                             -   })
    //-                             -}
    //-             .modal-footer
    //-                 button.btn.btn-primary(form="filterProduct") Filter
    -if(message) {
        .toast.show(role="alert" aria-live="assertive" aria-atomic="true" id="accountReq")
            .d-flex
                .toast-body= message
                button.btn-close.me-2.m-auto(type="button" data-bs-dismiss="toast" aria-label="Close" id="btnClose")
    -}
    .container
        //- div.row(style="padding : 1rem ; padding-top : unset")
        //-     .col-md-2(style="z-index : +1")
        //-         #list-example.list-group(style = "position : fixed; width : 250px ")
        //-             a.list-group-item.list-group-item-action.mb-1(href="/product/all" ) All product
        //-             -if (brand) {
        //-             -    let path = '/product/filter'
        //-             -    brand.forEach(each => {
        //-                 .btn-group.dropend.mb-1
        //-                     a.list-group-item.list-group-item-action(href=path + '?id_brand=' + each.id)= each.name
        //-                     a.btn.btn-secondary.dropdown-toggle(id="brand_categories" data-bs-toggle="dropdown" aria-expanded="false" href=path + '?id=' + each.id)
        //-                     -if(category.length > 0) {
        //-                         ul.dropdown-menu(aria-labelledby="brand_categories" style="transition : 0.2s")
        //-                             -category.forEach(one => {
        //-                                 li
        //-                                     a.dropdown-item(href=path + '?id_brand=' + each.id + '&id_category=' + one.id)= one.name
        //-                             -})
        //-                     -}
        //-             -   })
        //-             -}
        - if(products.length == 0) {
            h5(style="padding-left : 1rem")= "There is no any product matched"
        -} else {
            .row
                form(action="/product/all" method="GET")
                    .input-group.mb-3(style="width : 50%; padding : 1rem ; padding-bottom : unset")
                        input(type='text' id='inputSearch' name="key"  placeholder ="Enter..." class="form-control" value=key ? key : '')
                        .input-group-append
                            button.btn.btn-outline-secondary(id='btn-searchProduct') Search
                -   products.forEach(product => {
                        include product.pug
                -   })
            -}
